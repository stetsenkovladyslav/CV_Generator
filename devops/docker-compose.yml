version: "3.8"
services:

  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      DATA_DIR: /tmp/mongodb/data
      MONGO_INITDB_DATABASE: cv
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - ./mongodb:/tmp/mongodb
    ports:
      - 27017:27017
    restart: unless-stopped

  localstack:
    image: localstack/localstack:0.12.9.1
    environment:
      SERVICES: s3
      DATA_DIR: /tmp/localstack/data
    volumes:
      - ./localstack:/tmp/localstack
    ports:
      - 4566:4566

  zookeeper:
   image: confluentinc/cp-zookeeper:latest
   environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
   ports:
    - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPIC: "pdf:1:3"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock


  consumer:
    container_name: consumer
    environment:
      SPRING_KAFKA_CONSUMER_SERVER: kafka:9092
    depends_on:
      - kafka
    build:
      context: ../consumer
    ports:
      - 8081:8081

  producer:
    container_name: producer
    environment:
      SPRING_KAFKA_PRODUCER_SERVER: kafka:9092
    depends_on:
      - kafka
    build:
      context:  ../producer
    ports:
      - 8080:8080